@page "/forgot-password"
@using AcadeAppWeb.Models
@inject HttpClient Http

<h3>Esqueci minha senha</h3>

<div class="forgot-password-form">
    <form @onsubmit="OnSubmit">
        <div class="form-group mb-2">
            <label for="email">E-mail:</label>
            <input id="email" type="text" @bind="Email" class="form-control" />
        </div>

        <div class="form-group mb-2">
            <label for="novaSenha">Nova senha:</label>
            <input id="novaSenha" type="password" @bind="NovaSenha" class="form-control" />
        </div>

        <div class="form-group mb-2">
            <label for="confirmSenha">Confirmar senha:</label>
            <input id="confirmSenha" type="password" @bind="ConfirmSenha" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Redefinir Senha</button>
    </form>

    @if (!string.IsNullOrEmpty(Message))
    {
        <p class="mt-2">@Message</p>
    }
</div>

@code {
    private string Email { get; set; } = string.Empty;
    private string NovaSenha { get; set; } = string.Empty;
    private string ConfirmSenha { get; set; } = string.Empty;
    private string Message { get; set; } = string.Empty;

    private async Task OnSubmit()
    {
        // Prevent default form submission behavior
        // (Blazor automatically prevents reload when using @onsubmit)

        if (string.IsNullOrWhiteSpace(Email) || string.IsNullOrWhiteSpace(NovaSenha) || string.IsNullOrWhiteSpace(ConfirmSenha))
        {
            Message = "Todos os campos são obrigatórios!";
            return;
        }

        if (NovaSenha != ConfirmSenha)
        {
            Message = "As senhas não coincidem!";
            return;
        }

        try
        {
            var userList = await Http.GetFromJsonAsync<List<Usuario>>("http://localhost:5206/api/usuarios") ?? new List<Usuario>();
            var user = userList.FirstOrDefault(u => u.Email == Email);

            if (user == null)
            {
                Message = "Email não encontrado.";
                return;
            }

            var response = await Http.PutAsJsonAsync($"http://localhost:5206/api/usuarios/{user.Id}/senha", NovaSenha);

            if (response.IsSuccessStatusCode)
            {
                Message = "Senha alterada com sucesso!";
            }
            else
            {
                Message = $"Erro ao alterar senha: {response.ReasonPhrase}";
            }
        }
        catch (Exception ex)
        {
            Message = $"Erro ao contatar a API: {ex.Message}";
        }
    }
}
