@page "/trabalhadores"
@using AcadeAppWeb.Models
@inject HttpClient Http

<h3>Trabalhadores</h3>

@if (trabalhadores == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Email</th>
                <th>Tipo Carro</th>
                <th>Tipo Lixo</th>
                <th>Qtd Máxima</th>
                <th>Disponibilidade</th>
                <th>Nota</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var t in trabalhadores)
            {
                <tr>
                    <td>@t.Nome</td>
                    <td>@t.Email</td>
                    <td>@t.TipoCarro</td>
                    <td>@t.TipoLixoRecolhido</td>
                    <td>@t.QtdMaxima</td>
                    <td>@t.Disponibilidade</td>
                    <td>@t.Nota</td>
                    <td>
                        <button class="btn btn-sm btn-warning" @onclick="() => EditTrabalhador(t)">Editar</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteTrabalhador(t.Id)">Excluir</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<hr />
<h4>@(editingTrabalhador != null ? "Editar Trabalhador" : "Adicionar Trabalhador")</h4>

<EditForm Model="trabalhadorForm" OnValidSubmit="SaveTrabalhador">
    <InputText @bind-Value="trabalhadorForm.Nome" placeholder="Nome" class="form-control" />
    <InputText @bind-Value="trabalhadorForm.Email" placeholder="Email" class="form-control" />
    <InputText @bind-Value="trabalhadorForm.TipoCarro" placeholder="Tipo Carro" class="form-control" />
    <InputText @bind-Value="trabalhadorForm.TipoLixoRecolhido" placeholder="Tipo Lixo" class="form-control" />
    <InputNumber @bind-Value="trabalhadorForm.QtdMaxima" placeholder="Qtd Máxima" class="form-control" />
    <InputText @bind-Value="trabalhadorForm.Disponibilidade" placeholder="Disponibilidade" class="form-control" />
    <InputNumber @bind-Value="trabalhadorForm.Nota" placeholder="Nota" class="form-control" />
    <InputText @bind-Value="trabalhadorForm.HistoricoAtv" placeholder="Histórico" class="form-control" />

    <button type="submit" class="btn btn-primary mt-2">@((editingTrabalhador != null) ? "Atualizar" : "Adicionar")</button>
    <button type="button" class="btn btn-secondary mt-2" @onclick="CancelEdit">Cancelar</button>
</EditForm>

@code {
    private List<Trabalhador>? trabalhadores;
    private Trabalhador trabalhadorForm = new();
    private Trabalhador? editingTrabalhador;

    protected override async Task OnInitializedAsync()
    {
        await LoadTrabalhadores();
    }

    private async Task LoadTrabalhadores()
    {
        trabalhadores = await Http.GetFromJsonAsync<List<Trabalhador>>("http://localhost:5206/api/trabalhadores");
    }

    private void EditTrabalhador(Trabalhador t)
    {
        editingTrabalhador = t;
        trabalhadorForm = new Trabalhador
        {
            Id = t.Id,
            Nome = t.Nome,
            Email = t.Email,
            TipoCarro = t.TipoCarro,
            TipoLixoRecolhido = t.TipoLixoRecolhido,
            QtdMaxima = t.QtdMaxima,
            Disponibilidade = t.Disponibilidade,
            Nota = t.Nota,
            HistoricoAtv = t.HistoricoAtv
        };
    }

    private void CancelEdit()
    {
        editingTrabalhador = null;
        trabalhadorForm = new Trabalhador();
    }

    private async Task SaveTrabalhador()
    {
        if (editingTrabalhador == null)
        {
            await Http.PostAsJsonAsync("http://localhost:5206/api/trabalhadores", trabalhadorForm);
        }
        else
        {
            await Http.PutAsJsonAsync($"http://localhost:5206/api/trabalhadores/{trabalhadorForm.Id}", trabalhadorForm);
            editingTrabalhador = null;
        }

        trabalhadorForm = new Trabalhador();
        await LoadTrabalhadores();
    }

    private async Task DeleteTrabalhador(int id)
    {
        await Http.DeleteAsync($"http://localhost:5206/api/trabalhadores/{id}");
        await LoadTrabalhadores();
    }
}
