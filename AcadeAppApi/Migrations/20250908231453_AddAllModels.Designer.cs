// <auto-generated />
using System;
using AcadeAppApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcadeAppApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250908231453_AddAllModels")]
    partial class AddAllModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("AcadeAppApi.Models.EstacaoDeColeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LinkMaps")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EstacoesDeColeta");
                });

            modelBuilder.Entity("AcadeAppApi.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataColeta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Disponibilidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("QtdLixo")
                        .HasColumnType("REAL");

                    b.Property<float>("QtdMaxima")
                        .HasColumnType("REAL");

                    b.Property<int>("Tempo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoLixo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("AcadeAppApi.Models.Trabalhador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Disponibilidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoricoAtv")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Nota")
                        .HasColumnType("REAL");

                    b.Property<float>("QtdMaxima")
                        .HasColumnType("REAL");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoCarro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoLixoRecolhido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trabalhadores");
                });

            modelBuilder.Entity("AcadeAppApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoricoAtv")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdiomaPref")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InterfacePref")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PontosColeta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RelatorioImpacto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
